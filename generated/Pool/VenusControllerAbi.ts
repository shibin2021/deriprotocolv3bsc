// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class VenusControllerAbi extends ethereum.SmartContract {
  static bind(address: Address): VenusControllerAbi {
    return new VenusControllerAbi("VenusControllerAbi", address);
  }

  getAllMarkets(): Array<Address> {
    let result = super.call("getAllMarkets", "getAllMarkets():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getAllMarkets(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllMarkets",
      "getAllMarkets():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}
